name: ci
on: [push]

jobs:
  spellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check resume.md spelling
        uses: crate-ci/typos@v1.13.26
        with:
          files: ./resume.md

  build:
    needs: spellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install latest resumerk
        run: |
          gh release download --repo braheezy-resume/resumerk --pattern '*linux*'
          tar xf *.tar.gz
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Figure out API URL
        id: get_api_url
        run: echo "api_url=$(aws apigatewayv2 get-apis | jq -r '.Items[0].ApiEndpoint')"  >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-west-1'

      - name: Convert resume
        env:
          API_URL: ${{ steps.get_api_url.outputs.api_url }}
        run: |
          echo "API URL is: $API_URL"
          sed -i "s/{URL}/${API_URL//\//\\/}/g" visitor_counter.js
          ./resumerk resume.md -jsFile resume.js -cssFile resume.css

      - uses: actions/upload-artifact@v3
        with:
          name: resume_files
          path: |
            resume.html
            resume.pdf
            resume.md
            visitor_counter.js

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: resume_files

      - name: Delete old release
        continue-on-error: true
        run: |
          LAST_RELEASE_TAG=$(gh release list --repo $GITHUB_REPOSITORY --limit 1 | awk '{print $3}')
          gh release delete $LAST_RELEASE_TAG --cleanup-tag --yes --repo $GITHUB_REPOSITORY
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Determine relase tag
        id: set_tag
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Deploy all artifacts to Github
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set_tag.outputs.sha_short }}
          name: current
          body: |
            The current resume assets are below.

            This release and tag was auto-generated.
          files: resume.*

      - name: Deploy HTML to S3
        # Upload single file to s3 and compare on file size only.
        # The timestamp always changes and makes `sync` copy every time.
        run: aws s3 sync . s3://${{ secrets.AWS_BUCKET }} --exclude='*' --include='resume.html' --size-only
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-west-1'
